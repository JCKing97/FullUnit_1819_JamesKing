"""Creating database

Revision ID: 5f3d12058fb0
Revises: 
Create Date: 2019-02-04 21:47:55.346194

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f3d12058fb0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_timestamp'), 'match', ['timestamp'], unique=False)
    op.create_table('reputation_community',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('corrupted_observations', sa.Boolean(), nullable=True),
    sa.Column('simulated', sa.Boolean(), nullable=True),
    sa.Column('number_of_onlookers', sa.Integer(), nullable=True),
    sa.Column('length_of_generations', sa.Integer(), nullable=True),
    sa.Column('mutation_chance', sa.Float(), nullable=True),
    sa.Column('cooperation_rate', sa.Integer(), nullable=True),
    sa.Column('social_activeness', sa.Integer(), nullable=True),
    sa.Column('positivity_of_gossip', sa.Integer(), nullable=True),
    sa.Column('fitness', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reputation_strategy',
    sa.Column('strategy_name', sa.String(), nullable=False),
    sa.Column('strategy_options', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('strategy_name', 'strategy_options')
    )
    op.create_table('tournament',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('error', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['reputation_community.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('strategy', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id', 'match_id')
    )
    op.create_table('reputation_generation',
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_point', sa.Integer(), nullable=True),
    sa.Column('end_point', sa.Integer(), nullable=True),
    sa.Column('cooperation_rate', sa.Integer(), nullable=True),
    sa.Column('social_activeness', sa.Integer(), nullable=True),
    sa.Column('positivity_of_gossip', sa.Integer(), nullable=True),
    sa.Column('fitness', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['reputation_community.id'], ),
    sa.PrimaryKeyConstraint('community_id', 'id')
    )
    op.create_table('round',
    sa.Column('num', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('num', 'match_id')
    )
    op.create_table('tournament_player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('strategy', sa.String(length=120), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('cooperation_rating', sa.Float(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.PrimaryKeyConstraint('id', 'tournament_id')
    )
    op.create_table('action',
    sa.Column('round_num', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('cooperate', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['round_num'], ['round.num'], ),
    sa.PrimaryKeyConstraint('round_num', 'match_id', 'player_id')
    )
    op.create_table('reputation_player',
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cooperation_rate', sa.Integer(), nullable=True),
    sa.Column('social_activeness', sa.Integer(), nullable=True),
    sa.Column('positivity_of_gossip', sa.Integer(), nullable=True),
    sa.Column('fitness', sa.Integer(), nullable=True),
    sa.Column('strategy_name', sa.String(), nullable=True),
    sa.Column('strategy_options', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['reputation_generation.community_id'], ),
    sa.ForeignKeyConstraint(['generation_id'], ['reputation_generation.id'], ),
    sa.ForeignKeyConstraint(['strategy_name'], ['reputation_strategy.strategy_name'], ),
    sa.ForeignKeyConstraint(['strategy_options'], ['reputation_strategy.strategy_options'], ),
    sa.PrimaryKeyConstraint('generation_id', 'community_id', 'id')
    )
    op.create_table('reputation_action',
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timepoint', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('INTERACTION', 'GOSSIP', 'IDLE', name='actiontype'), nullable=False),
    sa.Column('gossiper', sa.Integer(), nullable=True),
    sa.Column('about', sa.Integer(), nullable=True),
    sa.Column('recipient', sa.Integer(), nullable=True),
    sa.Column('gossip', sa.Enum('POSITIVE', 'NEGATIVE', name='gossipcontent'), nullable=True),
    sa.Column('donor', sa.Integer(), nullable=True),
    sa.Column('action', sa.Enum('COOPERATE', 'DEFECT', name='interactioncontent'), nullable=True),
    sa.ForeignKeyConstraint(['about'], ['reputation_player.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['reputation_community.id'], ),
    sa.ForeignKeyConstraint(['donor'], ['reputation_player.id'], ),
    sa.ForeignKeyConstraint(['generation_id'], ['reputation_generation.id'], ),
    sa.ForeignKeyConstraint(['gossiper'], ['reputation_player.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['reputation_player.id'], ),
    sa.ForeignKeyConstraint(['recipient'], ['reputation_player.id'], ),
    sa.PrimaryKeyConstraint('generation_id', 'community_id', 'player_id', 'id')
    )
    op.create_table('reputation_action_onlookers',
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('onlooker_id', sa.Integer(), nullable=False),
    sa.Column('action_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['action_id'], ['reputation_action.id'], ),
    sa.ForeignKeyConstraint(['actor_id'], ['reputation_player.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['reputation_community.id'], ),
    sa.ForeignKeyConstraint(['generation_id'], ['reputation_generation.id'], ),
    sa.ForeignKeyConstraint(['onlooker_id'], ['reputation_player.id'], ),
    sa.PrimaryKeyConstraint('community_id', 'generation_id', 'actor_id', 'onlooker_id', 'action_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reputation_action_onlookers')
    op.drop_table('reputation_action')
    op.drop_table('reputation_player')
    op.drop_table('action')
    op.drop_table('tournament_player')
    op.drop_table('round')
    op.drop_table('reputation_generation')
    op.drop_table('player')
    op.drop_table('experiment')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('tournament')
    op.drop_table('reputation_strategy')
    op.drop_table('reputation_community')
    op.drop_index(op.f('ix_match_timestamp'), table_name='match')
    op.drop_table('match')
    # ### end Alembic commands ###
